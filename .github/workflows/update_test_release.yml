name: Update Release

on:
  workflow_run:
    workflows: ["Build Linux", "Build Macos"]
    types:
      - completed

jobs:
  update_release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Get Release ID by Name
        id: get_release
        run: |
          release_tag="testing_release"
          release_info=$(gh release list --json name,tagName -q ".[] | select(.tagName == \"$release_tag\")")
          release_id=$(echo "$release_info" | jq -r '.id')
          echo "release_id=${release_id}" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: List existing release assets
        id: list_assets
        run: |
          release_assets=$(gh release view "${{ env.release_id }}" --json assets -q ".assets[].id")
          echo "release_assets=${release_assets}" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete old release assets
        run: |
          for asset_id in ${{ env.release_assets }}; do
            gh release delete "${asset_id}" --yes
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: macos-build  # Make sure this matches the name of your macOS artifact in your build workflow
          path: ./macos-artifacts

      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: linux-build  # Make sure this matches the name of your Linux artifact in your build workflow
          path: ./linux-artifacts

      - name: Update existing release with new artifacts
        run: |
          for artifact in ./macos-artifacts/*.zip; do
            gh release upload ${{ env.release_id }} $artifact --clobber
          done
          for artifact in ./linux-artifacts/*.zip; do
            gh release upload ${{ env.release_id }} $artifact --clobber
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
